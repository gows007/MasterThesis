classdef FeuerWeRRImuMsg < robotics.ros.Message
    %FeuerWeRRImuMsg MATLAB implementation of sensor_synch_drivers/FeuerWeRRImuMsg
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2017 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'sensor_synch_drivers/FeuerWeRRImuMsg' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = 'f4aafc471d5ca338a6808754e9c22cf1' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Constant, Access = protected)
        GeometryMsgsVector3Class = robotics.ros.msg.internal.MessageFactory.getClassForType('geometry_msgs/Vector3') % Dispatch to MATLAB class for message type geometry_msgs/Vector3
        StdMsgsHeaderClass = robotics.ros.msg.internal.MessageFactory.getClassForType('std_msgs/Header') % Dispatch to MATLAB class for message type std_msgs/Header
        StdMsgsInt16MultiArrayClass = robotics.ros.msg.internal.MessageFactory.getClassForType('std_msgs/Int16MultiArray') % Dispatch to MATLAB class for message type std_msgs/Int16MultiArray
        TimeClass = robotics.ros.msg.internal.MessageFactory.getClassForType('time') % Dispatch to MATLAB class for message type time
    end
    
    properties (Dependent)
        Header
        ImuAngularVelocity
        ImuLinearAcceleration
        Ma351LinearAcceleration
        ImuStream
        Feuertime
    end
    
    properties (Access = protected)
        Cache = struct('Header', [], 'ImuAngularVelocity', [], 'ImuLinearAcceleration', [], 'Ma351LinearAcceleration', [], 'ImuStream', [], 'Feuertime', []) % The cache for fast data access
    end
    
    properties (Constant, Hidden)
        PropertyList = {'Feuertime', 'Header', 'ImuAngularVelocity', 'ImuLinearAcceleration', 'ImuStream', 'Ma351LinearAcceleration'} % List of non-constant message properties
        ROSPropertyList = {'feuertime', 'header', 'imu_angular_velocity', 'imu_linear_acceleration', 'imu_stream', 'ma351_linear_acceleration'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = FeuerWeRRImuMsg(msg)
            %FeuerWeRRImuMsg Construct the message object FeuerWeRRImuMsg
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function header = get.Header(obj)
            %get.Header Get the value for property Header
            if isempty(obj.Cache.Header)
                obj.Cache.Header = feval(obj.StdMsgsHeaderClass, obj.JavaMessage.getHeader);
            end
            header = obj.Cache.Header;
        end
        
        function set.Header(obj, header)
            %set.Header Set the value for property Header
            validateattributes(header, {obj.StdMsgsHeaderClass}, {'nonempty', 'scalar'}, 'FeuerWeRRImuMsg', 'Header');
            
            obj.JavaMessage.setHeader(header.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.Header)
                obj.Cache.Header.setJavaObject(header.getJavaObject);
            end
        end
        
        function imuangularvelocity = get.ImuAngularVelocity(obj)
            %get.ImuAngularVelocity Get the value for property ImuAngularVelocity
            if isempty(obj.Cache.ImuAngularVelocity)
                obj.Cache.ImuAngularVelocity = feval(obj.GeometryMsgsVector3Class, obj.JavaMessage.getImuAngularVelocity);
            end
            imuangularvelocity = obj.Cache.ImuAngularVelocity;
        end
        
        function set.ImuAngularVelocity(obj, imuangularvelocity)
            %set.ImuAngularVelocity Set the value for property ImuAngularVelocity
            validateattributes(imuangularvelocity, {obj.GeometryMsgsVector3Class}, {'nonempty', 'scalar'}, 'FeuerWeRRImuMsg', 'ImuAngularVelocity');
            
            obj.JavaMessage.setImuAngularVelocity(imuangularvelocity.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.ImuAngularVelocity)
                obj.Cache.ImuAngularVelocity.setJavaObject(imuangularvelocity.getJavaObject);
            end
        end
        
        function imulinearacceleration = get.ImuLinearAcceleration(obj)
            %get.ImuLinearAcceleration Get the value for property ImuLinearAcceleration
            if isempty(obj.Cache.ImuLinearAcceleration)
                obj.Cache.ImuLinearAcceleration = feval(obj.GeometryMsgsVector3Class, obj.JavaMessage.getImuLinearAcceleration);
            end
            imulinearacceleration = obj.Cache.ImuLinearAcceleration;
        end
        
        function set.ImuLinearAcceleration(obj, imulinearacceleration)
            %set.ImuLinearAcceleration Set the value for property ImuLinearAcceleration
            validateattributes(imulinearacceleration, {obj.GeometryMsgsVector3Class}, {'nonempty', 'scalar'}, 'FeuerWeRRImuMsg', 'ImuLinearAcceleration');
            
            obj.JavaMessage.setImuLinearAcceleration(imulinearacceleration.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.ImuLinearAcceleration)
                obj.Cache.ImuLinearAcceleration.setJavaObject(imulinearacceleration.getJavaObject);
            end
        end
        
        function ma351linearacceleration = get.Ma351LinearAcceleration(obj)
            %get.Ma351LinearAcceleration Get the value for property Ma351LinearAcceleration
            if isempty(obj.Cache.Ma351LinearAcceleration)
                obj.Cache.Ma351LinearAcceleration = feval(obj.GeometryMsgsVector3Class, obj.JavaMessage.getMa351LinearAcceleration);
            end
            ma351linearacceleration = obj.Cache.Ma351LinearAcceleration;
        end
        
        function set.Ma351LinearAcceleration(obj, ma351linearacceleration)
            %set.Ma351LinearAcceleration Set the value for property Ma351LinearAcceleration
            validateattributes(ma351linearacceleration, {obj.GeometryMsgsVector3Class}, {'nonempty', 'scalar'}, 'FeuerWeRRImuMsg', 'Ma351LinearAcceleration');
            
            obj.JavaMessage.setMa351LinearAcceleration(ma351linearacceleration.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.Ma351LinearAcceleration)
                obj.Cache.Ma351LinearAcceleration.setJavaObject(ma351linearacceleration.getJavaObject);
            end
        end
        
        function imustream = get.ImuStream(obj)
            %get.ImuStream Get the value for property ImuStream
            if isempty(obj.Cache.ImuStream)
                obj.Cache.ImuStream = feval(obj.StdMsgsInt16MultiArrayClass, obj.JavaMessage.getImuStream);
            end
            imustream = obj.Cache.ImuStream;
        end
        
        function set.ImuStream(obj, imustream)
            %set.ImuStream Set the value for property ImuStream
            validateattributes(imustream, {obj.StdMsgsInt16MultiArrayClass}, {'nonempty', 'scalar'}, 'FeuerWeRRImuMsg', 'ImuStream');
            
            obj.JavaMessage.setImuStream(imustream.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.ImuStream)
                obj.Cache.ImuStream.setJavaObject(imustream.getJavaObject);
            end
        end
        
        function feuertime = get.Feuertime(obj)
            %get.Feuertime Get the value for property Feuertime
            if isempty(obj.Cache.Feuertime)
                obj.Cache.Feuertime = feval(obj.TimeClass, obj.JavaMessage.getFeuertime);
            end
            feuertime = obj.Cache.Feuertime;
        end
        
        function set.Feuertime(obj, feuertime)
            %set.Feuertime Set the value for property Feuertime
            validateattributes(feuertime, {obj.TimeClass}, {'nonempty', 'scalar'}, 'FeuerWeRRImuMsg', 'Feuertime');
            
            obj.JavaMessage.setFeuertime(feuertime.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.Feuertime)
                obj.Cache.Feuertime.setJavaObject(feuertime.getJavaObject);
            end
        end
    end
    
    methods (Access = protected)
        function resetCache(obj)
            %resetCache Resets any cached properties
            obj.Cache.Header = [];
            obj.Cache.ImuAngularVelocity = [];
            obj.Cache.ImuLinearAcceleration = [];
            obj.Cache.Ma351LinearAcceleration = [];
            obj.Cache.ImuStream = [];
            obj.Cache.Feuertime = [];
        end
        
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Clear any existing cached properties
            cpObj.resetCache;
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Recursively copy compound properties
            cpObj.Header = copy(obj.Header);
            cpObj.ImuAngularVelocity = copy(obj.ImuAngularVelocity);
            cpObj.ImuLinearAcceleration = copy(obj.ImuLinearAcceleration);
            cpObj.Ma351LinearAcceleration = copy(obj.Ma351LinearAcceleration);
            cpObj.ImuStream = copy(obj.ImuStream);
            cpObj.Feuertime = copy(obj.Feuertime);
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.Header = feval([obj.StdMsgsHeaderClass '.loadobj'], strObj.Header);
            obj.ImuAngularVelocity = feval([obj.GeometryMsgsVector3Class '.loadobj'], strObj.ImuAngularVelocity);
            obj.ImuLinearAcceleration = feval([obj.GeometryMsgsVector3Class '.loadobj'], strObj.ImuLinearAcceleration);
            obj.Ma351LinearAcceleration = feval([obj.GeometryMsgsVector3Class '.loadobj'], strObj.Ma351LinearAcceleration);
            obj.ImuStream = feval([obj.StdMsgsInt16MultiArrayClass '.loadobj'], strObj.ImuStream);
            obj.Feuertime = feval([obj.TimeClass '.loadobj'], strObj.Feuertime);
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.Header = saveobj(obj.Header);
            strObj.ImuAngularVelocity = saveobj(obj.ImuAngularVelocity);
            strObj.ImuLinearAcceleration = saveobj(obj.ImuLinearAcceleration);
            strObj.Ma351LinearAcceleration = saveobj(obj.Ma351LinearAcceleration);
            strObj.ImuStream = saveobj(obj.ImuStream);
            strObj.Feuertime = saveobj(obj.Feuertime);
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.sensor_synch_drivers.FeuerWeRRImuMsg.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.sensor_synch_drivers.FeuerWeRRImuMsg;
            obj.reload(strObj);
        end
    end
end
