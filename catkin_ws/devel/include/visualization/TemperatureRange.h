// Generated by gencpp from file visualization/TemperatureRange.msg
// DO NOT EDIT!


#ifndef VISUALIZATION_MESSAGE_TEMPERATURERANGE_H
#define VISUALIZATION_MESSAGE_TEMPERATURERANGE_H

#include <ros/service_traits.h>


#include <visualization/TemperatureRangeRequest.h>
#include <visualization/TemperatureRangeResponse.h>


namespace visualization
{

struct TemperatureRange
{

typedef TemperatureRangeRequest Request;
typedef TemperatureRangeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TemperatureRange
} // namespace visualization


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::visualization::TemperatureRange > {
  static const char* value()
  {
    return "10eabfbcf8caad5dbfe2a7ee7be8570f";
  }

  static const char* value(const ::visualization::TemperatureRange&) { return value(); }
};

template<>
struct DataType< ::visualization::TemperatureRange > {
  static const char* value()
  {
    return "visualization/TemperatureRange";
  }

  static const char* value(const ::visualization::TemperatureRange&) { return value(); }
};


// service_traits::MD5Sum< ::visualization::TemperatureRangeRequest> should match 
// service_traits::MD5Sum< ::visualization::TemperatureRange > 
template<>
struct MD5Sum< ::visualization::TemperatureRangeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::visualization::TemperatureRange >::value();
  }
  static const char* value(const ::visualization::TemperatureRangeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::visualization::TemperatureRangeRequest> should match 
// service_traits::DataType< ::visualization::TemperatureRange > 
template<>
struct DataType< ::visualization::TemperatureRangeRequest>
{
  static const char* value()
  {
    return DataType< ::visualization::TemperatureRange >::value();
  }
  static const char* value(const ::visualization::TemperatureRangeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::visualization::TemperatureRangeResponse> should match 
// service_traits::MD5Sum< ::visualization::TemperatureRange > 
template<>
struct MD5Sum< ::visualization::TemperatureRangeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::visualization::TemperatureRange >::value();
  }
  static const char* value(const ::visualization::TemperatureRangeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::visualization::TemperatureRangeResponse> should match 
// service_traits::DataType< ::visualization::TemperatureRange > 
template<>
struct DataType< ::visualization::TemperatureRangeResponse>
{
  static const char* value()
  {
    return DataType< ::visualization::TemperatureRange >::value();
  }
  static const char* value(const ::visualization::TemperatureRangeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VISUALIZATION_MESSAGE_TEMPERATURERANGE_H
